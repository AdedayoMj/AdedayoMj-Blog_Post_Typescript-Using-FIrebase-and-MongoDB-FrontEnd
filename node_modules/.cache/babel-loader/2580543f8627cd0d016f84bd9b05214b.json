{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/quiz_run/quizrun/src/pages/home.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Header from '../components/header';\nimport BlogPreview from '../components/blog_preview';\nimport ErrorText from '../components/error_text';\nimport LoadingComponent from '../components/loading_components';\nimport config from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = props => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    getAllBlogs();\n  }, []);\n\n  const getAllBlogs = async () => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: `${config.server.url}/blogs`\n      });\n\n      if (response.status === (200 || 304)) {\n        let blogs = response.data.blogs;\n        blogs.sort((x, y) => y.updatedAt.localeCompare(x.updatedAt));\n        setBlogs(blogs);\n      } else {\n        setError('Unable to retrieve blogs');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingComponent, {\n      children: \"Loading blogs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"p-0\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Blog\",\n      headline: \"checkout my test blog using typescript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        color: 'white'\n      },\n      className: \"mt-5\",\n      children: [blogs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"There are no blogs yet. You should \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/edit\",\n          children: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 60\n        }, this), \" one \\uD83D\\uDE0A.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), blogs.map((blog, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BlogPreview, {\n            _id: blog._id,\n            author: blog.author.name,\n            headline: blog.headline,\n            title: blog.title,\n            createdAt: blog.createdAt,\n            updatedAt: blog.updatedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ErrorText, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"5HskbNpJdH+5PEBbFWGUn4E2jbg=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/pages/home.tsx"],"names":["axios","React","useEffect","useState","Link","Container","Header","BlogPreview","ErrorText","LoadingComponent","config","HomePage","props","blogs","setBlogs","loading","setLoading","error","setError","getAllBlogs","response","method","url","server","status","data","sort","x","y","updatedAt","localeCompare","message","setTimeout","color","length","map","blog","index","_id","author","name","headline","title","createdAt"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Header from '../components/header';\nimport BlogPreview from '../components/blog_preview';\nimport ErrorText from '../components/error_text';\nimport LoadingComponent from '../components/loading_components';\nimport config from '../config/config';\nimport IBlog from '../interfaces/blog';\n// import Naviagtion from '../components/navigation';\nimport IPageProps from '../interfaces/pages';\n\nimport IUser from '../interfaces/user';\n\nconst HomePage: React.FunctionComponent<IPageProps> = (props) => {\n    const [blogs, setBlogs] = useState<IBlog[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        getAllBlogs();\n    }, []);\n\n\n    const getAllBlogs = async () => {\n        try {\n            const response = await axios({\n                method: 'GET',\n                url: `${config.server.url}/blogs`\n            });\n\n            if (response.status === (200 || 304)) {\n                let blogs = response.data.blogs as IBlog[];\n                blogs.sort((x, y) => y.updatedAt.localeCompare(x.updatedAt));\n\n                setBlogs(blogs);\n            } else {\n                setError('Unable to retrieve blogs');\n            }\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setTimeout(() => {\n                setLoading(false);\n            }, 500);\n        }\n    };\n\n    if (loading)\n    {\n        return <LoadingComponent>Loading blogs...</LoadingComponent>\n    }\n    return (\n        <Container fluid className=\"p-0\">\n            {/* <Naviagtion/> */}\n            <Header title=\"Blog\" headline=\"checkout my test blog using typescript\" />\n\n            <Container style={{ color: 'white' }} className=\"mt-5\">\n                {blogs.length === 0 && (\n                    <p>\n                        There are no blogs yet. You should <Link to=\"/edit\">post</Link> one ðŸ˜Š.\n                    </p>\n                )}\n                {blogs.map((blog, index) => {\n                    return (\n                        <div key={index}>\n                            <BlogPreview _id={blog._id} author={(blog.author as IUser).name} headline={blog.headline} title={blog.title} createdAt={blog.createdAt} updatedAt={blog.updatedAt} />\n                            <hr />\n                        </div>\n                    );\n                })}\n                <ErrorText error={error} />\n            </Container>\n        </Container>\n    );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}