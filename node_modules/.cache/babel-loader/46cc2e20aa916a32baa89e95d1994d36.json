{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/quiz_run/quizrun/src/pages/home.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport Header from '../components/header';\nimport config from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = props => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const getAllBlogs = async () => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: `${config.server.url}/blogs`\n      });\n\n      if (response.status === (200 || 304)) {\n        let blogs = response.data.blogs;\n        blogs.sort((x, y) => y.updatedAt.localeCompare(x.updatedAt));\n        setBlogs(blogs);\n      } else {\n        setError('Unable to retrieve blogs');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingComponent, {\n      children: \"Loading blogs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"p-0\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Blog\",\n      headline: \"checkout the my blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        color: 'white'\n      },\n      children: \"Blog Stuff .....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 8\n  }, this);\n};\n\n_s(HomePage, \"sEEqPv6ipOLEyo+qw84QdUsh348=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/pages/home.tsx"],"names":["axios","React","useState","Container","Header","config","HomePage","props","blogs","setBlogs","loading","setLoading","error","setError","getAllBlogs","response","method","url","server","status","data","sort","x","y","updatedAt","localeCompare","message","setTimeout","color"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAMA,MAAMC,QAA4C,GAACC,KAAK,IAAE;AAAA;;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAU,EAAV,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAS,EAAT,CAAlC;;AAEA,QAAMY,WAAW,GAAG,YAAY;AAC5B,QACA;AACI,YAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC;AACzBgB,QAAAA,MAAM,EAAE,KADiB;AAEzBC,QAAAA,GAAG,EAAG,GAAEZ,MAAM,CAACa,MAAP,CAAcD,GAAI;AAFD,OAAD,CAA5B;;AAKA,UAAIF,QAAQ,CAACI,MAAT,MAAqB,OAAO,GAA5B,CAAJ,EACA;AACI,YAAIX,KAAK,GAAGO,QAAQ,CAACK,IAAT,CAAcZ,KAA1B;AACAA,QAAAA,KAAK,CAACa,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,SAAF,CAAYC,aAAZ,CAA0BH,CAAC,CAACE,SAA5B,CAApB;AAEAf,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,OAND,MAQA;AACIK,QAAAA,QAAQ,CAAC,0BAAD,CAAR;AACH;AACJ,KAlBD,CAmBA,OAAOD,KAAP,EACA;AACIC,MAAAA,QAAQ,CAACD,KAAK,CAACc,OAAP,CAAR;AACH,KAtBD,SAwBA;AACIC,MAAAA,UAAU,CAAC,MAAM;AACbhB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAFS,EAEP,GAFO,CAAV;AAGH;AACJ,GA9BD;;AAgCA,MAAID,OAAJ,EACA;AACI,wBAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACG,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,KAA3B;AAAA,4BAEI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,QAAQ,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAC;AAAP,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAWH,CApDD;;GAAMtB,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["\nimport axios from 'axios';\nimport React, { useState } from 'react'\nimport { Container } from 'reactstrap';\nimport Header from '../components/header';\nimport config from '../config/config';\nimport IBlog from '../interfaces/blog';\n// import Naviagtion from '../components/navigation';\nimport IPageProps from \"../interfaces/pages\";\n\n\nconst HomePage:React.FunctionComponent<IPageProps>=props=>{\n    const [blogs, setBlogs] = useState<IBlog[]>([]);\n    const [loading, setLoading] = useState<boolean>(true)\n    const [error, setError] = useState<string>('');\n\n    const getAllBlogs = async () => {\n        try \n        {\n            const response = await axios({\n                method: 'GET',\n                url: `${config.server.url}/blogs`,\n            });\n\n            if (response.status === (200 || 304))\n            {\n                let blogs = response.data.blogs as IBlog[];\n                blogs.sort((x,y) => y.updatedAt.localeCompare(x.updatedAt));\n\n                setBlogs(blogs);\n            }\n            else\n            {\n                setError('Unable to retrieve blogs');\n            }\n        } \n        catch (error) \n        {\n            setError(error.message);\n        }\n        finally\n        {\n            setTimeout(() => {\n                setLoading(false)\n            }, 500)\n        }\n    }\n\n    if (loading) \n    {\n        return <LoadingComponent>Loading blogs...</LoadingComponent>\n    }\n    return(\n       <Container fluid className=\"p-0\">\n           {/* <Naviagtion/> */}\n           <Header title=\"Blog\" headline=\"checkout the my blog\"/>\n\n        <Container style={{color:'white'}} >\n            Blog Stuff .....\n        </Container>\n\n       </Container>\n    );\n}\n\n\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}