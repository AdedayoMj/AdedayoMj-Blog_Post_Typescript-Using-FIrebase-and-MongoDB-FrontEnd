{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/quiz_run/quizrun/src/pages/change_password.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport CenterPiece from '../components/centerpiece';\nimport ErrorText from '../components/error_text';\nimport { auth } from '../config/firebase';\nimport logging from '../config/logging';\nimport UserContext from '../context/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePasswordPage = props => {\n  _s();\n\n  var _auth$currentUser2, _auth$currentUser2$pr;\n\n  const [changing, setChanging] = useState(false);\n  const [password, setPassword] = useState('');\n  const [old, setOld] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const {\n    user\n  } = useContext(UserContext).userState;\n\n  const passwordChangeRequest = () => {\n    var _auth$currentUser;\n\n    if (password !== confirm) {\n      setError('Make sure your passwords are matching');\n      return;\n    }\n\n    if (error !== '') setError('');\n    setChanging(true);\n    (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.updatePassword(password).then(() => {\n      logging.info('Password change successful.');\n      history.push('/');\n    }).catch(error => {\n      logging.error(error);\n      setChanging(false);\n      setError(error.message);\n    });\n  };\n\n  if (((_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : (_auth$currentUser2$pr = _auth$currentUser2.providerData[0]) === null || _auth$currentUser2$pr === void 0 ? void 0 : _auth$currentUser2$pr.providerId) !== 'password') return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CenterPiece, {\n    header: \"Change Password\",\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        autoComplete: \"new-password\",\n        type: \"password\",\n        name: \"oldPassword\",\n        id: \"oldPassword\",\n        placeholder: \"Current Password\",\n        onChange: event => setOld(event.target.value),\n        value: old\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        autoComplete: \"new-password\",\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Enter Password\",\n        onChange: event => setPassword(event.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        autoComplete: \"new-password\",\n        type: \"password\",\n        name: \"confirm\",\n        id: \"confirm\",\n        placeholder: \"Confirm Password\",\n        onChange: event => setConfirm(event.target.value),\n        value: confirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: changing,\n      color: \"success\",\n      block: true,\n      onClick: () => passwordChangeRequest(),\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePasswordPage, \"32rk4tOkOAhAHgBi4H+8iFfsZzY=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChangePasswordPage;\nexport default ChangePasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePasswordPage\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/pages/change_password.tsx"],"names":["React","useContext","useState","Redirect","useHistory","Button","FormGroup","Input","CenterPiece","ErrorText","auth","logging","UserContext","ChangePasswordPage","props","changing","setChanging","password","setPassword","old","setOld","confirm","setConfirm","error","setError","history","user","userState","passwordChangeRequest","currentUser","updatePassword","then","info","push","catch","message","providerData","providerId","event","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport CenterPiece from '../components/centerpiece';\nimport ErrorText from '../components/error_text';\nimport { auth } from '../config/firebase';\nimport logging from '../config/logging';\nimport UserContext from '../context/user';\nimport IPageProps from '../interfaces/pages';\n\nconst ChangePasswordPage: React.FunctionComponent<IPageProps> = props => {\n    const [changing, setChanging] = useState<boolean>(false);\n    const [password, setPassword] = useState<string>('');\n    const [old, setOld] = useState<string>('');\n    const [confirm, setConfirm] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    const history = useHistory();\n    const {user} = useContext(UserContext).userState;\n\n \n    const passwordChangeRequest = () => {\n        if (password !== confirm)\n        {\n            setError('Make sure your passwords are matching');\n            return;\n        }\n\n        if (error !== '') setError('');\n\n        setChanging(true);\n\n        auth.currentUser?.updatePassword(password)\n        .then(() => {\n            logging.info('Password change successful.');\n            history.push('/');\n        })\n        .catch(error => {\n            logging.error(error);\n            setChanging(false);\n            setError(error.message);\n        });\n    }\n\n\n    if (auth.currentUser?.providerData[0]?.providerId !== 'password')\n        return <Redirect to=\"/\" />;\n    return (\n        <CenterPiece header=\"Change Password\">\n        <FormGroup>\n            <Input \n                autoComplete=\"new-password\"\n                type=\"password\"\n                name=\"oldPassword\"\n                id=\"oldPassword\"\n                placeholder=\"Current Password\"\n                onChange={event => setOld(event.target.value)}\n                value={old}\n            />\n        </FormGroup>\n        <FormGroup>\n            <Input \n                autoComplete=\"new-password\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Enter Password\"\n                onChange={event => setPassword(event.target.value)}\n                value={password}\n            />\n        </FormGroup>\n        <FormGroup>\n            <Input \n                autoComplete=\"new-password\"\n                type=\"password\"\n                name=\"confirm\"\n                id=\"confirm\"\n                placeholder=\"Confirm Password\"\n                onChange={event => setConfirm(event.target.value)}\n                value={confirm}\n            />\n        </FormGroup>\n        <Button\n            disabled={changing}\n            color=\"success\"\n            block\n            onClick={() => passwordChangeRequest()}\n        >\n            Change Password\n        </Button>\n        <ErrorText error={error} />\n    </CenterPiece>\n    );\n}\n\nexport default ChangePasswordPage;"]},"metadata":{},"sourceType":"module"}