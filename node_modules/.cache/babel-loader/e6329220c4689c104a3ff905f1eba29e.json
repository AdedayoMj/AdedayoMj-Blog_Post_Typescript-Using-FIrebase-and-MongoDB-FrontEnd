{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/quiz_run/quizrun/src/application.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AuthRoute from './components/authroute';\nimport Naviagtion from './components/navigation';\nimport logging from './config/logging';\nimport routes from './config/routes';\nimport { initialUserState, UserContextProvider, userReducer } from './context/user';\nimport { Validate } from './modules/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Application = props => {\n  _s();\n\n  const [userState, userDispatch] = useReducer(userReducer, initialUserState);\n  /**Used for debugging */\n\n  const [authStage, setAuthStage] = useState('Checking localstorage ...');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    CheckLocalStorageForCredentials(); // setTimeout(() => {\n    //     CheckLocalStorageForCredentials();\n    // }, 1000);\n    // eslint-disable-next-line\n  }, []);\n  /**\n   * check to use if we have a token\n   * if we do, verify it with the backend\n   * if not, we are logged out initially\n   */\n\n  const CheckLocalStorageForCredentials = () => {\n    setAuthStage('Checking credentials ...');\n    const fire_token = localStorage.getItem('fire_token');\n\n    if (fire_token === null) {\n      userDispatch({\n        type: 'logout',\n        payload: initialUserState\n      });\n      setAuthStage('No credentials found');\n      setLoading(false); // setTimeout(() => {\n      //     setLoading(false);\n      // }, 500);\n    } else {\n      return Validate(fire_token, (error, user) => {\n        if (error) {\n          logging.error(error);\n          setAuthStage('No credentials found');\n          userDispatch({\n            type: 'logout',\n            payload: initialUserState\n          });\n          setLoading(false); //    setTimeout(() => {\n          //     setLoading(false);\n          //    }, 1000);\n        } else if (user) {\n          setAuthStage('User Authenticated');\n          userDispatch({\n            type: 'login',\n            payload: {\n              user,\n              fire_token\n            }\n          });\n          setLoading(false); // setTimeout(() => {\n          //     setLoading(false);\n          //    },  1000);\n        }\n      });\n    }\n  };\n\n  const userContextValues = {\n    userState,\n    userDispatch\n  }; // if (loading)\n  // {\n  //     return <LoadingComponent>{authStage}</LoadingComponent>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(UserContextProvider, {\n    value: userContextValues,\n    children: [/*#__PURE__*/_jsxDEV(Naviagtion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map((route, index) => {\n        if (route.auth) {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            exact: route.exact,\n            render: routeProps => /*#__PURE__*/_jsxDEV(AuthRoute, {\n              children: /*#__PURE__*/_jsxDEV(route.component, { ...routeProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 86\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 75\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 26\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Route, {\n          exact: route.exact,\n          path: route.path,\n          render: routeProps => /*#__PURE__*/_jsxDEV(route.component, { ...routeProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 70\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Application, \"oMVoAyTZ7BtKSd8SmWHxhkAgSHE=\");\n\n_c = Application;\nexport default Application;\n\nfunction CheckLocalStorageForCredentials() {\n  throw new Error('Function not implemented.');\n}\n\n_c2 = CheckLocalStorageForCredentials;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Application\");\n$RefreshReg$(_c2, \"CheckLocalStorageForCredentials\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/application.tsx"],"names":["React","useEffect","useReducer","useState","Route","Switch","AuthRoute","Naviagtion","logging","routes","initialUserState","UserContextProvider","userReducer","Validate","Application","props","userState","userDispatch","authStage","setAuthStage","loading","setLoading","CheckLocalStorageForCredentials","fire_token","localStorage","getItem","type","payload","error","user","userContextValues","map","route","index","auth","path","exact","routeProps","Error"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport AuthRoute from './components/authroute';\nimport LoadingComponent from './components/loading_components/indes';\nimport Naviagtion from './components/navigation';\nimport logging from './config/logging';\nimport routes from './config/routes';\nimport { initialUserState, UserContextProvider, userReducer } from './context/user';\nimport { Validate } from './modules/auth';\n\n\nexport interface IApplicationProps{}\n\nconst Application: React.FunctionComponent<IApplicationProps> = props => {\n    const [userState, userDispatch] = useReducer(userReducer, initialUserState);\n    /**Used for debugging */\n    const [authStage, setAuthStage] = useState<string>('Checking localstorage ...');\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        CheckLocalStorageForCredentials();\n        // setTimeout(() => {\n        //     CheckLocalStorageForCredentials();\n        // }, 1000);\n\n        // eslint-disable-next-line\n    }, []);\n\n    /**\n     * check to use if we have a token\n     * if we do, verify it with the backend\n     * if not, we are logged out initially\n     */\n\n    const CheckLocalStorageForCredentials = () => {\n        setAuthStage('Checking credentials ...');\n\n        const fire_token = localStorage.getItem('fire_token');\n\n        if (fire_token === null)\n        {\n            userDispatch({ type: 'logout', payload: initialUserState });\n            setAuthStage('No credentials found');\n            setLoading(false);\n            // setTimeout(() => {\n            //     setLoading(false);\n            // }, 500);\n        }\n        else\n        {\n          \n            return Validate(fire_token, (error, user) => {\n                if (error)\n                {\n                    logging.error(error);\n                    setAuthStage('No credentials found');\n                    userDispatch({ type: 'logout', payload: initialUserState });\n                    setLoading(false);\n                //    setTimeout(() => {\n                //     setLoading(false);\n                //    }, 1000);\n                    \n                }\n                else if (user)\n                {\n                    setAuthStage('User Authenticated');\n                    userDispatch({ type: 'login', payload: { user, fire_token } });\n                    setLoading(false);\n                    // setTimeout(() => {\n                    //     setLoading(false);\n                    //    },  1000);\n                }\n            })\n        }\n    }\n\n    const userContextValues = {\n        userState,\n        userDispatch\n    };\n\n    // if (loading)\n    // {\n    //     return <LoadingComponent>{authStage}</LoadingComponent>;\n    // }\n\n\n    return(\n        <UserContextProvider value={userContextValues}>\n            <Naviagtion/>\n        <Switch>\n\n            {routes.map((route, index) => {\n                 if (route.auth)\n                 {\n                     return (\n                         <Route\n                             path={route.path}\n                             exact={route.exact}\n                             key={index}\n                             render={(routeProps: RouteComponentProps) => <AuthRoute><route.component {...routeProps} /></AuthRoute> }\n                         />\n                     );\n                 }\n                    return(\n                        <Route\n                        key={index}\n                        exact={route.exact}\n                        path={route.path}\n                        render={(routeProps: RouteComponentProps) => <route.component {...routeProps} />}\n                        />\n                    )\n                })\n            }\n        </Switch>\n        </UserContextProvider>\n    )\n}\n\nexport default Application;\n\nfunction CheckLocalStorageForCredentials() {\n    throw new Error('Function not implemented.');\n}\n"]},"metadata":{},"sourceType":"module"}