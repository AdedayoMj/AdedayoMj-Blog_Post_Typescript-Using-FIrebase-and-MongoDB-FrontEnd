{"ast":null,"code":"import { auth } from '../config/firebase';\nexport const SignInWithSocialMedia = provider => new Promise((resolve, reject) => {\n  auth.signInWithPopup(provider).then(result => resolve(result)).catch(error => reject(error));\n});\n_c = SignInWithSocialMedia;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInWithSocialMedia\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/modules/auth.ts"],"names":["auth","SignInWithSocialMedia","provider","Promise","resolve","reject","signInWithPopup","then","result","catch","error"],"mappings":"AACA,SAASA,IAAT,QAAqB,oBAArB;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,QAAD,IACjC,IAAIC,OAAJ,CAA0C,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC3DL,EAAAA,IAAI,CAACM,eAAL,CAAqBJ,QAArB,EACKK,IADL,CACWC,MAAD,IAAYJ,OAAO,CAACI,MAAD,CAD7B,EAEKC,KAFL,CAEYC,KAAD,IAAWL,MAAM,CAACK,KAAD,CAF5B;AAGH,CAJD,CADG;KAAMT,qB","sourcesContent":["import firebase from 'firebase';\nimport { auth } from '../config/firebase';\n\nexport const SignInWithSocialMedia = (provider: firebase.auth.AuthProvider) =>\n    new Promise<firebase.auth.UserCredential>((resolve, reject) => {\n        auth.signInWithPopup(provider)\n            .then((result) => resolve(result))\n            .catch((error) => reject(error));\n    });"]},"metadata":{},"sourceType":"module"}