{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/quiz_run/quizrun/src/components/authroute/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport logging from '../../config/logging';\nimport UserContext from '../../context/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthRoute = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const {\n    user\n  } = useContext(UserContext).userState;\n\n  if (user._id === '') {\n    logging.info('Unauthorized, redirecting.');\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  }\n};\n\n_s(AuthRoute, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c = AuthRoute;\nexport default AuthRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/components/authroute/index.tsx"],"names":["React","useContext","Redirect","logging","UserContext","AuthRoute","props","children","user","userState","_id","info"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;;AAIA,MAAMC,SAAmD,GAAGC,KAAK,IAAI;AAAA;;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,QAAM;AAACE,IAAAA;AAAD,MAASP,UAAU,CAACG,WAAD,CAAV,CAAwBK,SAAvC;;AAEA,MAAID,IAAI,CAACE,GAAL,KAAa,EAAjB,EACA;AACIP,IAAAA,OAAO,CAACQ,IAAR,CAAa,4BAAb;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAJD,MAMA;AACI,wBAAO;AAAA,gBAAGJ;AAAH,qBAAP;AACH;AACJ,CAdD;;GAAMF,S;;KAAAA,S;AAgBN,eAAeA,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport logging from '../../config/logging';\nimport UserContext from '../../context/user';\n\nexport interface IAuthRouteProps {}\n\nconst AuthRoute: React.FunctionComponent<IAuthRouteProps> = props => {\n    const { children } = props;\n\n    const {user} = useContext(UserContext).userState;\n\n    if (user._id === '')\n    {\n        logging.info('Unauthorized, redirecting.');\n        return <Redirect to='/login' />\n    }\n    else\n    {\n        return <>{children}</>\n    }\n}\n\nexport default AuthRoute;"]},"metadata":{},"sourceType":"module"}