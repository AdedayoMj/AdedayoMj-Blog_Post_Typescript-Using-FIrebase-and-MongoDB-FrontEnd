{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/quiz_run/quizrun/src/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport CenterPiece from '../components/centerpiece';\nimport ErrorText from '../components/error_text';\nimport LoadingComponent from '../components/loading_components';\nimport { auth } from '../config/firebase';\nimport logging from '../config/logging';\nimport UserContext from '../context/user';\nimport { CreateAccount } from '../modules/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = props => {\n  _s();\n\n  const [registering, setRegistering] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const userContext = useContext(UserContext);\n  const fire_token = localStorage.getItem('fire_token');\n\n  const signUpWithEmailAndPassword = () => {\n    if (error !== '') setError('');\n    setRegistering(true);\n\n    if (password === confirm) {\n      auth.createUserWithEmailAndPassword(email, password).then(async result => {\n        var _auth$currentUser;\n\n        logging.info(result);\n        (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.sendEmailVerification();\n        let user = result.user;\n        let displayUsername = name;\n\n        if (user) {\n          user.updateProfile({\n            displayName: displayUsername\n          });\n          let uid = user.uid;\n          let name = displayUsername;\n          let email = user.email;\n\n          if (name) {\n            try {\n              let fire_token = await user.getIdToken();\n              /**if we get a token, auth with the backup */\n\n              CreateAccount(uid, name, email, fire_token, (error, _user) => {\n                if (error) {\n                  setError(error);\n                  setRegistering(false);\n                } else if (_user) {\n                  userContext.userDispatch({\n                    type: 'login',\n                    payload: {\n                      user: _user,\n                      fire_token\n                    }\n                  });\n                  history.push('/login');\n                }\n              });\n            } catch (error) {\n              setError('Invalid token.');\n              logging.error(error);\n              setRegistering(false);\n            }\n          } else {\n            setError('Something went wrong, try again later');\n            setRegistering(false);\n          }\n        } else {\n          setError('Oops!!! Something went wrong please try again');\n          setRegistering(false);\n        }\n\n        auth.signOut();\n      }).catch(error => {\n        logging.error(error);\n\n        if (error.code.includes('auth/weak-password')) {\n          setError('Please enter a stronger password.');\n        } else if (error.code.includes('auth/email-already-in-use')) {\n          setError('Email already in use.');\n        } else {\n          setError('Unable to register.  Please try again later.');\n        }\n\n        setRegistering(false);\n      });\n    } else {\n      setError('Password does not match');\n    }\n  };\n\n  if (fire_token !== null) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CenterPiece, {\n    header: \"Reset Password\",\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Full Name\",\n        onChange: event => setName(event.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Email Address\",\n        onChange: event => setEmail(event.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        autoComplete: \"new-password\",\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Enter Password\",\n        onChange: event => setPassword(event.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        autoComplete: \"new-password\",\n        type: \"password\",\n        name: \"confirm\",\n        id: \"confirm\",\n        placeholder: \"Confirm Password\",\n        onChange: event => setConfirm(event.target.value),\n        value: confirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: registering,\n      color: \"success\",\n      block: true,\n      onClick: () => signUpWithEmailAndPassword(),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"m-1 text-center\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), registering && /*#__PURE__*/_jsxDEV(LoadingComponent, {\n      card: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"L/4eRRGVqkyD1k1PtSzuKjuOGlw=\", false, function () {\n  return [useHistory];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/pages/register.tsx"],"names":["React","useContext","useState","Link","Redirect","useHistory","Button","FormGroup","Input","CenterPiece","ErrorText","LoadingComponent","auth","logging","UserContext","CreateAccount","RegisterPage","props","registering","setRegistering","name","setName","email","setEmail","password","setPassword","confirm","setConfirm","error","setError","history","userContext","fire_token","localStorage","getItem","signUpWithEmailAndPassword","createUserWithEmailAndPassword","then","result","info","currentUser","sendEmailVerification","user","displayUsername","updateProfile","displayName","uid","getIdToken","_user","userDispatch","type","payload","push","signOut","catch","code","includes","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,QAA2C,kBAA3C;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,QAAyC,YAAzC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,SAASC,aAAT,QAA8B,iBAA9B;;;AAEA,MAAMC,YAAiD,GAAIC,KAAD,IAAW;AAAA;;AACjE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAS,EAAT,CAAlC;AAEA,QAAM4B,OAAO,GAAGzB,UAAU,EAA1B;AACA,QAAM0B,WAAW,GAAG9B,UAAU,CAACa,WAAD,CAA9B;AAEA,QAAMkB,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AAEA,QAAMC,0BAA0B,GAAG,MAAM;AACrC,QAAIP,KAAK,KAAK,EAAd,EAAkBC,QAAQ,CAAC,EAAD,CAAR;AAClBV,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAGK,QAAQ,KAAGE,OAAd,EAAsB;AACtBd,MAAAA,IAAI,CAACwB,8BAAL,CAAoCd,KAApC,EAA2CE,QAA3C,EACKa,IADL,CACU,MAAOC,MAAP,IAAkB;AAAA;;AACpBzB,QAAAA,OAAO,CAAC0B,IAAR,CAAaD,MAAb;AACA,6BAAA1B,IAAI,CAAC4B,WAAL,wEAAkBC,qBAAlB;AACA,YAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AACA,YAAIC,eAAe,GAAGvB,IAAtB;;AACA,YAAIsB,IAAJ,EAAU;AACNA,UAAAA,IAAI,CAACE,aAAL,CAAmB;AACfC,YAAAA,WAAW,EAAEF;AADE,WAAnB;AAGA,cAAIG,GAAG,GAAGJ,IAAI,CAACI,GAAf;AACA,cAAI1B,IAAI,GAAGuB,eAAX;AACA,cAAIrB,KAAK,GAAGoB,IAAI,CAACpB,KAAjB;;AACA,cAAIF,IAAJ,EAAU;AACN,gBAAI;AACA,kBAAIY,UAAU,GAAG,MAAMU,IAAI,CAACK,UAAL,EAAvB;AAEA;;AAEAhC,cAAAA,aAAa,CAAC+B,GAAD,EAAM1B,IAAN,EAAYE,KAAZ,EAAmBU,UAAnB,EAA+B,CAACJ,KAAD,EAAQoB,KAAR,KAAkB;AAC1D,oBAAIpB,KAAJ,EAAW;AACPC,kBAAAA,QAAQ,CAACD,KAAD,CAAR;AACAT,kBAAAA,cAAc,CAAC,KAAD,CAAd;AACH,iBAHD,MAGO,IAAI6B,KAAJ,EAAW;AACdjB,kBAAAA,WAAW,CAACkB,YAAZ,CAAyB;AAAEC,oBAAAA,IAAI,EAAE,OAAR;AAAiBC,oBAAAA,OAAO,EAAE;AAAET,sBAAAA,IAAI,EAAEM,KAAR;AAAehB,sBAAAA;AAAf;AAA1B,mBAAzB;AACAF,kBAAAA,OAAO,CAACsB,IAAR,CAAa,QAAb;AACH;AACJ,eARY,CAAb;AASH,aAdD,CAcE,OAAOxB,KAAP,EAAc;AACZC,cAAAA,QAAQ,CAAC,gBAAD,CAAR;AACAhB,cAAAA,OAAO,CAACe,KAAR,CAAcA,KAAd;AACAT,cAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,WApBD,MAoBO;AACHU,YAAAA,QAAQ,CAAC,uCAAD,CAAR;AACAV,YAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,SA/BD,MA+BO;AACHU,UAAAA,QAAQ,CAAC,+CAAD,CAAR;AACAV,UAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AACDP,QAAAA,IAAI,CAACyC,OAAL;AACH,OA1CL,EA2CKC,KA3CL,CA2CY1B,KAAD,IAAW;AACdf,QAAAA,OAAO,CAACe,KAAR,CAAcA,KAAd;;AAEA,YAAIA,KAAK,CAAC2B,IAAN,CAAWC,QAAX,CAAoB,oBAApB,CAAJ,EAA+C;AAC3C3B,UAAAA,QAAQ,CAAC,mCAAD,CAAR;AACH,SAFD,MAEO,IAAID,KAAK,CAAC2B,IAAN,CAAWC,QAAX,CAAoB,2BAApB,CAAJ,EAAsD;AACzD3B,UAAAA,QAAQ,CAAC,uBAAD,CAAR;AACH,SAFM,MAEA;AACHA,UAAAA,QAAQ,CAAC,8CAAD,CAAR;AACH;;AAEDV,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH,OAvDL;AAwDC,KAzDD,MAyDK;AACDU,MAAAA,QAAQ,CAAC,yBAAD,CAAR;AACH;AACJ,GA/DD;;AAgEA,MAAIG,UAAU,KAAK,IAAnB,EAAyB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAEzB,sBACI,QAAC,WAAD;AAAa,IAAA,MAAM,EAAC,gBAApB;AAAA,4BACI,QAAC,SAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,EAAE,EAAC,MAAlC;AAAyC,QAAA,WAAW,EAAC,WAArD;AAAiE,QAAA,QAAQ,EAAGyB,KAAD,IAAWpC,OAAO,CAACoC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA7F;AAAmH,QAAA,KAAK,EAAEvC;AAA1H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,EAAE,EAAC,OAApC;AAA4C,QAAA,WAAW,EAAC,eAAxD;AAAwE,QAAA,QAAQ,EAAGqC,KAAD,IAAWlC,QAAQ,CAACkC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArG;AAA2H,QAAA,KAAK,EAAErC;AAAlI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,SAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,YAAY,EAAC,cAApB;AAAmC,QAAA,IAAI,EAAC,UAAxC;AAAmD,QAAA,IAAI,EAAC,UAAxD;AAAmE,QAAA,EAAE,EAAC,UAAtE;AAAiF,QAAA,WAAW,EAAC,gBAA7F;AAA8G,QAAA,QAAQ,EAAGmC,KAAD,IAAWhC,WAAW,CAACgC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9I;AAAoK,QAAA,KAAK,EAAEnC;AAA3K;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI,QAAC,SAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,YAAY,EAAC,cAApB;AAAmC,QAAA,IAAI,EAAC,UAAxC;AAAmD,QAAA,IAAI,EAAC,SAAxD;AAAkE,QAAA,EAAE,EAAC,SAArE;AAA+E,QAAA,WAAW,EAAC,kBAA3F;AAA8G,QAAA,QAAQ,EAAGiC,KAAD,IAAW9B,UAAU,CAAC8B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA7I;AAAmK,QAAA,KAAK,EAAEjC;AAA1K;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAER,WAAlB;AAA+B,MAAA,KAAK,EAAC,SAArC;AAA+C,MAAA,KAAK,MAApD;AAAqD,MAAA,OAAO,EAAE,MAAMiB,0BAA0B,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAgBI;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,6DAC6B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAqBI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEP;AAAlB;AAAA;AAAA;AAAA;AAAA,YArBJ,EAsBKV,WAAW,iBAAI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,YAtBpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAzGD;;GAAMF,Y;UAQcX,U;;;KARdW,Y;AA2GN,eAAeA,YAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport CenterPiece from '../components/centerpiece';\nimport ErrorText from '../components/error_text';\nimport LoadingComponent from '../components/loading_components';\nimport { auth } from '../config/firebase';\nimport logging from '../config/logging';\nimport UserContext from '../context/user';\nimport IPageProps from '../interfaces/pages';\nimport { CreateAccount } from '../modules/auth';\n\nconst RegisterPage: React.FunctionComponent<IPageProps> = (props) => {\n    const [registering, setRegistering] = useState<boolean>(false);\n    const [name, setName] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [confirm, setConfirm] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    const history = useHistory();\n    const userContext = useContext(UserContext);\n\n    const fire_token = localStorage.getItem('fire_token');\n\n    const signUpWithEmailAndPassword = () => {\n        if (error !== '') setError('');\n        setRegistering(true);\n        if(password===confirm){\n        auth.createUserWithEmailAndPassword(email, password)\n            .then(async (result) => {\n                logging.info(result);\n                auth.currentUser?.sendEmailVerification();\n                let user = result.user;\n                let displayUsername = name;\n                if (user) {\n                    user.updateProfile({\n                        displayName: displayUsername\n                    });\n                    let uid = user.uid;\n                    let name = displayUsername;\n                    let email = user.email;\n                    if (name) {\n                        try {\n                            let fire_token = await user.getIdToken();\n\n                            /**if we get a token, auth with the backup */\n\n                            CreateAccount(uid, name, email, fire_token, (error, _user) => {\n                                if (error) {\n                                    setError(error);\n                                    setRegistering(false);\n                                } else if (_user) {\n                                    userContext.userDispatch({ type: 'login', payload: { user: _user, fire_token } });\n                                    history.push('/login');\n                                }\n                            });\n                        } catch (error) {\n                            setError('Invalid token.');\n                            logging.error(error);\n                            setRegistering(false);\n                        }\n                    } else {\n                        setError('Something went wrong, try again later');\n                        setRegistering(false);\n                    }\n                } else {\n                    setError('Oops!!! Something went wrong please try again');\n                    setRegistering(false);\n                }\n                auth.signOut();\n            })\n            .catch((error) => {\n                logging.error(error);\n\n                if (error.code.includes('auth/weak-password')) {\n                    setError('Please enter a stronger password.');\n                } else if (error.code.includes('auth/email-already-in-use')) {\n                    setError('Email already in use.');\n                } else {\n                    setError('Unable to register.  Please try again later.');\n                }\n\n                setRegistering(false);\n            });\n        }else{\n            setError('Password does not match')\n        }\n    };\n    if (fire_token !== null) return <Redirect to=\"/\" />;\n\n    return (\n        <CenterPiece header=\"Reset Password\">\n            <FormGroup>\n                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Full Name\" onChange={(event) => setName(event.target.value)} value={name} />\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email Address\" onChange={(event) => setEmail(event.target.value)} value={email} />\n            </FormGroup>\n            <FormGroup>\n                <Input autoComplete=\"new-password\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter Password\" onChange={(event) => setPassword(event.target.value)} value={password} />\n            </FormGroup>\n            <FormGroup>\n                <Input autoComplete=\"new-password\" type=\"password\" name=\"confirm\" id=\"confirm\" placeholder=\"Confirm Password\" onChange={(event) => setConfirm(event.target.value)} value={confirm} />\n            </FormGroup>\n            <Button disabled={registering} color=\"success\" block onClick={() => signUpWithEmailAndPassword()}>\n                Sign Up\n            </Button>\n            <small>\n                <p className=\"m-1 text-center\">\n                    Already have an account? <Link to=\"/login\">Login.</Link>\n                </p>\n            </small>\n            <ErrorText error={error} />\n            {registering && <LoadingComponent card={false} />}\n        </CenterPiece>\n    );\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}