{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/quiz_run/quizrun/src/pages/home.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Header from '../components/header';\nimport BlogPreview from '../components/blog_preview';\nimport ErrorText from '../components/error_text';\nimport config from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = props => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const getAllBlogs = async () => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: `${config.server.url}/blogs`\n      });\n\n      if (response.status === (200 || 304)) {\n        let blogs = response.data.blogs;\n        blogs.sort((x, y) => y.updatedAt.localeCompare(x.updatedAt));\n        setBlogs(blogs);\n      } else {\n        setError('Unable to retrieve blogs');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    }\n  }; // if (loading) \n  // {\n  //     return <LoadingComponent>Loading blogs...</LoadingComponent>\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"p-0\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Blog\",\n      headline: \"checkout the my blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        color: 'white'\n      },\n      className: \"mt-5\",\n      children: [blogs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"There are no blogs yet.  You should \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/edit\",\n          children: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 71\n        }, this), \" one \\uD83D\\uDE0A.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }, this), blogs.map((blog, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BlogPreview, {\n            _id: blog._id,\n            author: blog.author.name,\n            headline: blog.headline,\n            title: blog.title,\n            createdAt: blog.createdAt,\n            updatedAt: blog.updatedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ErrorText, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 8\n  }, this);\n};\n\n_s(HomePage, \"sEEqPv6ipOLEyo+qw84QdUsh348=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/macbook/quiz_run/quizrun/src/pages/home.tsx"],"names":["axios","React","useState","Link","Container","Header","BlogPreview","ErrorText","config","HomePage","props","blogs","setBlogs","loading","setLoading","error","setError","getAllBlogs","response","method","url","server","status","data","sort","x","y","updatedAt","localeCompare","message","setTimeout","color","length","map","blog","index","_id","author","name","headline","title","createdAt"],"mappings":"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","sourcesContent":["\nimport axios from 'axios';\nimport React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Header from '../components/header';\nimport BlogPreview from '../components/blog_preview';\nimport ErrorText from '../components/error_text';\nimport LoadingComponent from '../components/loading_components';\nimport config from '../config/config';\nimport IBlog from '../interfaces/blog';\n// import Naviagtion from '../components/navigation';\nimport IPageProps from \"../interfaces/pages\";\n\nimport IUser from '../interfaces/user';\n\nconst HomePage:React.FunctionComponent<IPageProps>=props=>{\n    const [blogs, setBlogs] = useState<IBlog[]>([]);\n    const [loading, setLoading] = useState<boolean>(true)\n    const [error, setError] = useState<string>('');\n\n    const getAllBlogs = async () => {\n        try \n        {\n            const response = await axios({\n                method: 'GET',\n                url: `${config.server.url}/blogs`,\n            });\n\n            if (response.status === (200 || 304))\n            {\n                let blogs = response.data.blogs as IBlog[];\n                blogs.sort((x,y) => y.updatedAt.localeCompare(x.updatedAt));\n\n                setBlogs(blogs);\n            }\n            else\n            {\n                setError('Unable to retrieve blogs');\n            }\n        } \n        catch (error) \n        {\n            setError(error.message);\n        }\n        finally\n        {\n            setTimeout(() => {\n                setLoading(false)\n            }, 500)\n        }\n    }\n\n    // if (loading) \n    // {\n    //     return <LoadingComponent>Loading blogs...</LoadingComponent>\n    // }\n    return(\n       <Container fluid className=\"p-0\">\n           {/* <Naviagtion/> */}\n           <Header title=\"Blog\" headline=\"checkout the my blog\"/>\n\n        <Container style={{color:'white'}} className=\"mt-5\" >\n        {blogs.length === 0 && <p>There are no blogs yet.  You should <Link to=\"/edit\">post</Link> one ðŸ˜Š.</p>}\n        {blogs.map((blog, index) => {\n                    return (\n                        <div key={index}>\n                            <BlogPreview\n                                _id={blog._id}\n                                author={(blog.author as IUser).name}\n                                headline={blog.headline}\n                                title={blog.title}\n                                createdAt={blog.createdAt}\n                                updatedAt={blog.updatedAt}\n                            />\n                            <hr />\n                        </div>\n                    );\n                })}\n                <ErrorText error={error} />\n        </Container>\n\n       </Container>\n    );\n}\n\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}